pruned <- prune_samples(!(rownames(sample_data(rare)) %in% to_remove), rare)
#relative abundance
zebrafish_16s_filter_re <- transform_sample_counts(pruned, function(x) x /sum(x))
#Get rid of small taxa
zebrafish_16s_filter2 <- filter_taxa(zebrafish_16s_filter_re, function(x) sum(x) > .001, TRUE)
#Combine OTUs with common taxa
zebrafish_16s_filter_re_g = tax_glom(zebrafish_16s_filter2, "Phylum")
zebrafish_16s_filter_re_g2 = tax_glom(zebrafish_16s_filter2, "Genus")
zebrafish_16s_filter_re_g2 = tax_glom(zebrafish_16s_filter2, "Genus")
zebrafish_genus <- zebrafish_16s %>%
tax_glom(taxrank = "Genus") %>%                     # agglomerate at phylum level
transform_sample_counts(function(x) {x/sum(x)} ) %>% # Transform to rel. abundance
psmelt() %>%                                         # Melt to long format
filter(Abundance > 0.05) %>%                         # Filter out low abundance taxa
arrange(Genus)                                      # Sort data frame alphabetically by phylum
zebrafish_16s_filter_re_g2 = tax_glom(zebrafish_16s_filter2, "Genus")
zebrafish_genus <- zebrafish_16s %>%
tax_glom(taxrank = "Genus") %>%                     # agglomerate at phylum level
transform_sample_counts(function(x) {x/sum(x)} ) %>% # Transform to rel. abundance
psmelt() %>%                                         # Melt to long format
filter(Abundance > 0.05) %>%                         # Filter out low abundance taxa
arrange(Genus)                                      # Sort data frame alphabetically by phylum
# Set colors for plotting
genus_colors <- c(
"salmon", "darkseagreen", "gold", "magenta", "slateblue", "bisque", "darkred", "cadetblue", "darkorange", "royalblue1", "orchid4", "seagreen", "thistle1", "skyblue1", "darkslateblue", "deeppink", "goldenrod2", "plum2", "antiquewhite", "aquamarine", "blue", "burlywood4", "cornflowerblue", "coral", "darkgray", "darkgreen", "darkorchid", "darksalmon", "firebrick1", "dimgray", "firebrick4", "darkseagreen1", "burlywood", "lavender", "lightcoral", "lightblue1"
)
# Plot
a <- list(
font = list(size = 14),
xref = "paper",
yref = "paper",
yanchor = "bottom",
xanchor = "center",
align = "center",
x = 0.5,
y = 1,
showarrow = FALSE)
zebrafish_genus_v2 <- subset(zebrafish_genus, Social.Status == "1_Dominant" | Social.Status == "2_Subordinate" | Social.Status == "3_Communal" | Social.Status == "4_Isolate" | Social.Status == "water_env")
ggplot(transform(zebrafish_genus_v2, Day=factor(Day, levels=c("Day_IP","Day_0","Day_7","Day_14"))), aes(x = Day, y = Abundance, fill = Genus), annotations=a) +
facet_grid(Social.Status~.) +
geom_bar(stat = "identity") +
scale_fill_manual(values = genus_colors) +
scale_x_discrete(labels = c("Day_IP", "Day_0", "Day_7", "Day_14", "Day_1"), drop = TRUE) +
# Remove x axis title
theme(axis.title.x = element_blank()) +
#
guides(fill = guide_legend(reverse = TRUE, keywidth = 1, keyheight = 1)) +
ylab("Relative Abundance (Genus > 5%)") +
ggtitle("Genus Composition of Zebrafish \n Bacterial Communities by Social Status")
ggplot(transform(zebrafish_genus_v2, Day=factor(Day, levels=c("Day_IP","Day_0","Day_7","Day_14","Day_1"))), aes(x = Day, y = Abundance, fill = Genus), annotations=a) +
facet_grid(Social.Status~.) +
geom_bar(stat = "identity") +
scale_fill_manual(values = genus_colors) +
scale_x_discrete(labels = c("Day_IP", "Day_0", "Day_7", "Day_14", "Day_1"), drop = TRUE) +
# Remove x axis title
theme(axis.title.x = element_blank()) +
#
guides(fill = guide_legend(reverse = TRUE, keywidth = 1, keyheight = 1)) +
ylab("Relative Abundance (Genus > 5%)") +
ggtitle("Genus Composition of Zebrafish \n Bacterial Communities by Social Status")
View(zebrafish_genus_v2)
str(zebrafish_genus_v2)
levels(zebrafish_genus_v2$Social.Status)
zebrafish_genus_v2 <- subset(zebrafish_genus, Social.Status == "1_Dominant" | Social.Status == "2_Subordinate" | Social.Status == "3_Communal" | Social.Status == "4_Isolate" | Social.Status == "Water")
ggplot(transform(zebrafish_genus_v2, Day=factor(Day, levels=c("Day_IP","Day_0","Day_7","Day_14","Day_1"))), aes(x = Day, y = Abundance, fill = Genus), annotations=a) +
facet_grid(Social.Status~.) +
geom_bar(stat = "identity") +
scale_fill_manual(values = genus_colors) +
scale_x_discrete(labels = c("Day_IP", "Day_0", "Day_7", "Day_14", "Day_1"), drop = TRUE) +
# Remove x axis title
theme(axis.title.x = element_blank()) +
#
guides(fill = guide_legend(reverse = TRUE, keywidth = 1, keyheight = 1)) +
ylab("Relative Abundance (Genus > 5%)") +
ggtitle("Genus Composition of Zebrafish \n Bacterial Communities by Social Status")
ggsave("../figures/genuscomp_zf_ENV.png", plot=last_plot(), device=NULL, path=NULL, scale=1, width=7, height=5, dpi=300, limitsize=TRUE)
#knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#setwd("~/Desktop/ES20_ZebrafishMicrobiomes/data")
#setwd("~/Github/ES20_ZebrafishMicrobiomes/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan"); require("ecodist");
require("dplyr"); require("reshape2"); require("labdsv")
require("nlme"); require("MASS"); require("ade4"); require("phytools")
require("png"); require("grid"); require("ggplot2")
require("ape"); require("picante");
require("cowplot"); require("ggpubr"); require("devtools"); require("tidyr")
require("patchwork")
require("phyloseq")
# Import Environmental Data
design <- read.csv("../data/ES_ZF_design.csv", row.names=1) #by setting working directory, you can use a shortcut filepath
design$Social.Status <- as.factor(design$Social.Status)
design$Day <- as.factor(design$Day)
# Import OTU data
# Import Raw Data
otu.in <- read.otu("../data/EM20_ZF_16S.opti_mcc.shared") #by setting working directory, you can use a shortcut filepath
otu_keep <- otu.in[, which(colSums(otu.in) >= 2)]
dim(otu_keep)
aa <- (rowSums(otu_keep))
aa
# OTU table - removed low abundance samples
otu_low_remov <- otu_keep[which(rowSums(otu_keep) >= 6000), ]
dim(otu_low_remov)
otu_final <- otu_low_remov[-c(94:97),] #removed Water, positive, negative
dim(otu_final)
# OTU table - odd sites in bacterial composition data and remove in design file
odd.sites <- c("F_Iso4_D0","F_P3_D14","F_Iso6_D14","Water_R1","Water_R2","mock_positive","negative","positive")
design_final <- design[setdiff(rownames(design), odd.sites), ]
dim(design_final)
dim(otu_final)
otu_final <- otu_final[match(rownames(design_final), rownames(otu_final)),] #make sure rows are in the same order
all.equal(rownames(design_final), rownames(otu_final))
# Import Taxonomy File for later
tax_df <- read.tax(taxonomy = "../data/EM20_ZF_16S.opti_mcc.0.03.cons.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
tax_df <- as.data.frame(tax_df)
# Rarefy Abundances (min abundance is 10181. We are sampling to 10181)
min(rowSums(otu_final))
otus.r <- rrarefy(otu_final, 10181)
# Fisher's Alpha
fisher <- fisher.alpha(otus.r)
# Chao 1 species estimator
bc_alpha_div <- estimateR(otus.r)
bc_alpha_div_df <- as.data.frame(bc_alpha_div)
bc_alpha_div_df_t <- t(bc_alpha_div_df)
bc_alpha_div_df_t <- as.data.frame(bc_alpha_div_df_t)
# Species Richness
richness <- rowSums((otu_final >= 1))
# Shannon Diversity
shannon <- diversity(otus.r, "shannon")
# Simpson's Evenness
simp.even <- apply(otus.r, 1, simp_even)
#Pielouâ€™s evenness
J <- shannon/log(specnumber(otus.r[,-c(1:1)]))
View(bc_alpha_div_df)
#combined richness, diversity, evenness
diversity <- cbind(design_final,richness,shannon,simp.even,J,bc_alpha_div_df_t)
diversity$Social.Status <- as.factor(diversity$Social.Status)
diversity$Day <- as.factor(diversity$Day)
str(diversity)
summary <- diversity %>% group_by(Social.Status, Day) %>% summarise(mean.richness=mean(richness), se.richness=se(richness), mean.shannon=mean(shannon), se.shannon=se(shannon))
print(summary)
library(emmeans)
library(lmerTest)
richness.lm <- lm(richness ~ Social.Status*Day, data = diversity)
richness.lm
summary(richness.lm)
chao1.lm <- lm(S.chao1 ~ Social.Status*Day, data = diversity)
chao1.lm
summary(chao1.lm)
anova(chao1.lm)
shannon.lm <- lm(shannon ~ Social.Status*Day, data = diversity)
shannon.lm
summary(shannon.lm)
anova(shannon.lm)
emmeans(shannon.lm, pairwise ~ Social.Status*Day)
evenness.lm <- lm(simp.even ~ Social.Status*Day, data = diversity)
evenness.lm
summary(evenness.lm)
anova(evenness.lm)
emmeans(evenness.lm, pairwise ~ Day)
#knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#setwd("~/Desktop/ES20_ZebrafishMicrobiomes/data")
#setwd("~/Github/ES20_ZebrafishMicrobiomes/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan"); require("ecodist");
require("dplyr"); require("reshape2"); require("labdsv")
require("nlme"); require("MASS"); require("ade4"); require("phytools")
require("png"); require("grid"); require("ggplot2")
require("ape"); require("picante");
require("cowplot"); require("ggpubr"); require("devtools"); require("tidyr")
require("patchwork")
require("phyloseq")
# Import Environmental Data
design <- read.csv("../data/ES_ZF_design.csv", row.names=1) #by setting working directory, you can use a shortcut filepath
design$Social.Status <- as.factor(design$Social.Status)
design$Day <- as.factor(design$Day)
# Import OTU data
# Import Raw Data
otu.in <- read.otu("../data/EM20_ZF_16S.opti_mcc.shared") #by setting working directory, you can use a shortcut filepath
# OTU table - remove otus w/ < 2 occurrences across all sites
otu_keep <- otu.in[, which(colSums(otu.in) >= 2)]
dim(otu_keep)
aa <- (rowSums(otu_keep))
aa
# OTU table - removed low abundance samples
otu_low_remov <- otu_keep[which(rowSums(otu_keep) >= 6000), ]
dim(otu_low_remov)
otu_final <- otu_low_remov[-c(94:97),] #removed Water, positive, negative
dim(otu_final)
# OTU table - odd sites in bacterial composition data and remove in design file
odd.sites <- c("F_Iso4_D0","F_P3_D14","F_Iso6_D14","Water_R1","Water_R2","mock_positive","negative","positive")
design_final <- design[setdiff(rownames(design), odd.sites), ]
dim(design_final)
dim(otu_final)
otu_final <- otu_final[match(rownames(design_final), rownames(otu_final)),] #make sure rows are in the same order
all.equal(rownames(design_final), rownames(otu_final))
# Import Taxonomy File for later
tax_df <- read.tax(taxonomy = "../data/EM20_ZF_16S.opti_mcc.0.03.cons.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
tax_df <- as.data.frame(tax_df)
# Rarefy Abundances (min abundance is 10181. We are sampling to 10181)
min(rowSums(otu_final))
otus.r <- rrarefy(otu_final, 10181)
# Fisher's Alpha
fisher <- fisher.alpha(otus.r)
# Chao 1 species estimator
bc_alpha_div <- estimateR(otus.r)
bc_alpha_div_df <- as.data.frame(bc_alpha_div)
bc_alpha_div_df_t <- t(bc_alpha_div_df)
bc_alpha_div_df_t <- as.data.frame(bc_alpha_div_df_t)
write.csv(bc_alpha_div_df_t,"../data/zf_bact_diversity.csv")
# Species Richness
richness <- rowSums((otu_final >= 1))
# Shannon Diversity
shannon <- diversity(otus.r, "shannon")
# Simpson's Evenness
simp.even <- apply(otus.r, 1, simp_even)
#Pielouâ€™s evenness
J <- shannon/log(specnumber(otus.r[,-c(1:1)]))
#combined richness, diversity, evenness
diversity <- cbind(design_final,richness,shannon,simp.even,J,bc_alpha_div_df_t)
write.csv(diversity,"../data/zf_diversity.csv")
#summary table for bacterial diversity
#diversity <- read.csv("../data/zf_diversity.csv", row.names=1)
diversity$Social.Status <- as.factor(diversity$Social.Status)
diversity$Day <- as.factor(diversity$Day)
str(diversity)
summary <- diversity %>% group_by(Social.Status, Day) %>% summarise(mean.richness=mean(richness), se.richness=se(richness), mean.shannon=mean(shannon), se.shannon=se(shannon))
print(summary)
#write.csv(summary,"../Desktop/ES20_ZebrafishMicrobiomes/data/diversity.bact.summary.csv")
library(emmeans)
library(lmerTest)
richness.lm <- lm(richness ~ Social.Status*Day, data = diversity)
richness.lm
summary(richness.lm)
chao1.lm <- lm(S.chao1 ~ Social.Status*Day, data = diversity)
chao1.lm
summary(chao1.lm)
anova(chao1.lm)
shannon.lm <- lm(shannon ~ Social.Status*Day, data = diversity)
shannon.lm
summary(shannon.lm)
anova(shannon.lm)
emmeans(shannon.lm, pairwise ~ Social.Status*Day)
evenness.lm <- lm(simp.even ~ Social.Status*Day, data = diversity)
evenness.lm
summary(evenness.lm)
anova(evenness.lm)
emmeans(evenness.lm, pairwise ~ Day)
# contrast        estimate      SE df t.ratio p.value
# Day_7 - Day_14  -0.02593 0.00811 77  -3.195  0.0107
evenness.lm <- lm(simp.even ~ Social.Status*Day, data = diversity)
evenness.lm
summary(evenness.lm)
anova(evenness.lm)
# Rarefy Abundances (min abundance is 10181. We are sampling to 10181)
min(rowSums(otu_final))
otus.r <- rrarefy(otu_final, 10181)
# Fisher's Alpha
fisher <- fisher.alpha(otus.r)
# Chao 1 species estimator
bc_alpha_div <- estimateR(otus.r)
bc_alpha_div_df <- as.data.frame(bc_alpha_div)
bc_alpha_div_df_t <- t(bc_alpha_div_df)
bc_alpha_div_df_t <- as.data.frame(bc_alpha_div_df_t)
write.csv(bc_alpha_div_df_t,"../data/zf_bact_diversity.csv")
# Species Richness
richness <- rowSums((otu_final >= 1))
# Shannon Diversity
shannon <- diversity(otus.r, "shannon")
# Simpson's Evenness
simp.even <- apply(otus.r, 1, simp_even)
#Pielouâ€™s evenness
J <- shannon/log(specnumber(otus.r[,-c(1:1)]))
#combined richness, diversity, evenness
diversity <- cbind(design_final,richness,shannon,simp.even,J,bc_alpha_div_df_t)
write.csv(diversity,"../data/zf_diversity.csv")
#summary table for bacterial diversity
#diversity <- read.csv("../data/zf_diversity.csv", row.names=1)
diversity$Social.Status <- as.factor(diversity$Social.Status)
diversity$Day <- as.factor(diversity$Day)
str(diversity)
summary <- diversity %>% group_by(Social.Status, Day) %>% summarise(mean.richness=mean(richness), se.richness=se(richness), mean.shannon=mean(shannon), se.shannon=se(shannon))
print(summary)
#write.csv(summary,"../Desktop/ES20_ZebrafishMicrobiomes/data/diversity.bact.summary.csv")
library(emmeans)
library(lmerTest)
richness.lm <- lm(richness ~ Social.Status*Day, data = diversity)
richness.lm
summary(richness.lm)
chao1.lm <- lm(S.chao1 ~ Social.Status*Day, data = diversity)
chao1.lm
summary(chao1.lm)
anova(chao1.lm)
shannon.lm <- lm(shannon ~ Social.Status*Day, data = diversity)
shannon.lm
summary(shannon.lm)
anova(shannon.lm)
emmeans(shannon.lm, pairwise ~ Social.Status*Day)
evenness.lm <- lm(simp.even ~ Social.Status*Day, data = diversity)
evenness.lm
summary(evenness.lm)
anova(evenness.lm)
emmeans(evenness.lm, pairwise ~ Day)
# contrast        estimate      SE df t.ratio p.value
# Day_7 - Day_14  -0.02593 0.00811 77  -3.195  0.0107
# Rarefy Abundances (min abundance is 10181. We are sampling to 10181)
min(rowSums(otu_final))
otus.r <- rrarefy(otu_final, 10181)
# Fisher's Alpha
fisher <- fisher.alpha(otus.r)
# Chao 1 species estimator
bc_alpha_div <- estimateR(otus.r)
bc_alpha_div_df <- as.data.frame(bc_alpha_div)
bc_alpha_div_df_t <- t(bc_alpha_div_df)
bc_alpha_div_df_t <- as.data.frame(bc_alpha_div_df_t)
write.csv(bc_alpha_div_df_t,"../data/zf_bact_diversity.csv")
# Species Richness
richness <- rowSums((otu_final >= 1))
# Shannon Diversity
shannon <- diversity(otus.r, "shannon")
# Simpson's Evenness
simp.even <- apply(otus.r, 1, simp_even)
#Pielouâ€™s evenness
J <- shannon/log(specnumber(otus.r[,-c(1:1)]))
#combined richness, diversity, evenness
diversity <- cbind(design_final,richness,shannon,simp.even,J,bc_alpha_div_df_t)
write.csv(diversity,"../data/zf_diversity.csv")
#summary table for bacterial diversity
#diversity <- read.csv("../data/zf_diversity.csv", row.names=1)
diversity$Social.Status <- as.factor(diversity$Social.Status)
diversity$Day <- as.factor(diversity$Day)
str(diversity)
summary <- diversity %>% group_by(Social.Status, Day) %>% summarise(mean.richness=mean(richness), se.richness=se(richness), mean.shannon=mean(shannon), se.shannon=se(shannon))
print(summary)
#write.csv(summary,"../Desktop/ES20_ZebrafishMicrobiomes/data/diversity.bact.summary.csv")
library(emmeans)
library(lmerTest)
richness.lm <- lm(richness ~ Social.Status*Day, data = diversity)
richness.lm
summary(richness.lm)
chao1.lm <- lm(S.chao1 ~ Social.Status*Day, data = diversity)
chao1.lm
summary(chao1.lm)
anova(chao1.lm)
shannon.lm <- lm(shannon ~ Social.Status*Day, data = diversity)
shannon.lm
summary(shannon.lm)
anova(shannon.lm)
emmeans(shannon.lm, pairwise ~ Social.Status*Day)
evenness.lm <- lm(simp.even ~ Social.Status*Day, data = diversity)
evenness.lm
summary(evenness.lm)
anova(evenness.lm)
emmeans(evenness.lm, pairwise ~ Day)
# contrast        estimate      SE df t.ratio p.value
# Day_7 - Day_14  -0.02593 0.00811 77  -3.195  0.0107
#knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
#setwd("~/Desktop/ES20_ZebrafishMicrobiomes/data")
#setwd("~/Github/ES20_ZebrafishMicrobiomes/analyses")
se <- function(x, ...){sd(x, na.rm = TRUE)/sqrt(length(na.omit(x)))}
ci <- function(x, ...){1.96 * sd(x,na.rm = TRUE)}
# Code Dependencies
source("../bin/DiversityFunctions.R")
source("../bin/MothurTools.R")
require("vegan"); require("ecodist");
require("dplyr"); require("reshape2"); require("labdsv")
require("nlme"); require("MASS"); require("ade4"); require("phytools")
require("png"); require("grid"); require("ggplot2")
require("ape"); require("picante");
require("cowplot"); require("ggpubr"); require("devtools"); require("tidyr")
require("patchwork")
require("phyloseq")
# Import Environmental Data
design <- read.csv("../data/ES_ZF_design.csv", row.names=1) #by setting working directory, you can use a shortcut filepath
design$Social.Status <- as.factor(design$Social.Status)
design$Day <- as.factor(design$Day)
# Import OTU data
# Import Raw Data
otu.in <- read.otu("../data/EM20_ZF_16S.opti_mcc.shared") #by setting working directory, you can use a shortcut filepath
# OTU table - remove otus w/ < 2 occurrences across all sites
otu_keep <- otu.in[, which(colSums(otu.in) >= 2)]
dim(otu_keep)
aa <- (rowSums(otu_keep))
aa
# OTU table - removed low abundance samples
otu_low_remov <- otu_keep[which(rowSums(otu_keep) >= 6000), ]
dim(otu_low_remov)
otu_final <- otu_low_remov[-c(94:97),] #removed Water, positive, negative
dim(otu_final)
# OTU table - odd sites in bacterial composition data and remove in design file
odd.sites <- c("F_Iso4_D0","F_P3_D14","F_Iso6_D14","Water_R1","Water_R2","mock_positive","negative","positive")
design_final <- design[setdiff(rownames(design), odd.sites), ]
dim(design_final)
dim(otu_final)
otu_final <- otu_final[match(rownames(design_final), rownames(otu_final)),] #make sure rows are in the same order
all.equal(rownames(design_final), rownames(otu_final))
# Import Taxonomy File for later
tax_df <- read.tax(taxonomy = "../data/EM20_ZF_16S.opti_mcc.0.03.cons.taxonomy",
format = "rdp", tax.levels = 6, col.tax = 3)
tax_df <- as.data.frame(tax_df)
# Rarefy Abundances (min abundance is 10181. We are sampling to 10181)
min(rowSums(otu_final))
otus.r <- rrarefy(otu_final, 10181)
# Fisher's Alpha
fisher <- fisher.alpha(otus.r)
# Chao 1 species estimator
bc_alpha_div <- estimateR(otus.r)
bc_alpha_div_df <- as.data.frame(bc_alpha_div)
bc_alpha_div_df_t <- t(bc_alpha_div_df)
bc_alpha_div_df_t <- as.data.frame(bc_alpha_div_df_t)
write.csv(bc_alpha_div_df_t,"../data/zf_bact_diversity.csv")
# Species Richness
richness <- rowSums((otu_final >= 1))
# Shannon Diversity
shannon <- diversity(otus.r, "shannon")
# Simpson's Evenness
simp.even <- apply(otus.r, 1, simp_even)
#Pielouâ€™s evenness
J <- shannon/log(specnumber(otus.r[,-c(1:1)]))
#combined richness, diversity, evenness
diversity <- cbind(design_final,richness,shannon,simp.even,J,bc_alpha_div_df_t)
write.csv(diversity,"../data/zf_diversity.csv")
#summary table for bacterial diversity
#diversity <- read.csv("../data/zf_diversity.csv", row.names=1)
diversity$Social.Status <- as.factor(diversity$Social.Status)
diversity$Day <- as.factor(diversity$Day)
str(diversity)
summary <- diversity %>% group_by(Social.Status, Day) %>% summarise(mean.richness=mean(richness), se.richness=se(richness), mean.shannon=mean(shannon), se.shannon=se(shannon))
print(summary)
#write.csv(summary,"../Desktop/ES20_ZebrafishMicrobiomes/data/diversity.bact.summary.csv")
library(emmeans)
library(lmerTest)
richness.lm <- lm(richness ~ Social.Status*Day, data = diversity)
richness.lm
summary(richness.lm)
chao1.lm <- lm(S.chao1 ~ Social.Status*Day, data = diversity)
chao1.lm
summary(chao1.lm)
anova(chao1.lm)
shannon.lm <- lm(shannon ~ Social.Status*Day, data = diversity)
shannon.lm
summary(shannon.lm)
anova(shannon.lm)
emmeans(shannon.lm, pairwise ~ Social.Status*Day)
evenness.lm <- lm(simp.even ~ Social.Status*Day, data = diversity)
evenness.lm
summary(evenness.lm)
anova(evenness.lm)
emmeans(evenness.lm, pairwise ~ Day)
# contrast        estimate      SE df t.ratio p.value
# Day_7 - Day_14  -0.02593 0.00811 77  -3.195  0.0107
# Rarefy Abundances (min abundance is 10181. We are sampling to 10181)
min(rowSums(otu_final))
otus.r <- rrarefy(otu_final, 10181)
# Fisher's Alpha
fisher <- fisher.alpha(otus.r)
# Chao 1 species estimator
bc_alpha_div <- estimateR(otus.r)
bc_alpha_div_df <- as.data.frame(bc_alpha_div)
bc_alpha_div_df_t <- t(bc_alpha_div_df)
bc_alpha_div_df_t <- as.data.frame(bc_alpha_div_df_t)
write.csv(bc_alpha_div_df_t,"../data/zf_bact_diversity.csv")
# Species Richness
richness <- rowSums((otu_final >= 1))
# Shannon Diversity
shannon <- diversity(otus.r, "shannon")
# Simpson's Evenness
simp.even <- apply(otus.r, 1, simp_even)
#Pielouâ€™s evenness
J <- shannon/log(specnumber(otus.r[,-c(1:1)]))
#combined richness, diversity, evenness
diversity <- cbind(design_final,richness,shannon,simp.even,J,bc_alpha_div_df_t)
write.csv(diversity,"../data/zf_diversity.csv")
diversity$Social.Status <- as.factor(diversity$Social.Status)
diversity$Day <- as.factor(diversity$Day)
str(diversity)
summary <- diversity %>% group_by(Social.Status, Day) %>% summarise(mean.richness=mean(richness), se.richness=se(richness), mean.shannon=mean(shannon), se.shannon=se(shannon))
print(summary)
library(emmeans)
library(lmerTest)
richness.lm <- lm(richness ~ Social.Status*Day, data = diversity)
richness.lm
summary(richness.lm)
chao1.lm <- lm(S.chao1 ~ Social.Status*Day, data = diversity)
chao1.lm
summary(chao1.lm)
anova(chao1.lm)
shannon.lm <- lm(shannon ~ Social.Status*Day, data = diversity)
shannon.lm
summary(shannon.lm)
anova(shannon.lm)
emmeans(shannon.lm, pairwise ~ Social.Status*Day)
evenness.lm <- lm(simp.even ~ Social.Status*Day, data = diversity)
evenness.lm
summary(evenness.lm)
anova(evenness.lm)
emmeans(evenness.lm, pairwise ~ Day)
emmeans(evenness.lm, pairwise ~ Social.Status*Day)
